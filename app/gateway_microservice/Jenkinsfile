pipeline{
    agent any

    environment{
        SONARCLOUD = 'Sonarcloud'
    }

    stages{

        stage('Clone repository'){
            steps{
                script{
                    withCredentials([string(credentialsId: "PAT", variable: "PAT")]) {
                        git branch: 'main', url: "https://github.com/lamalicious/${PAT}@github.com/user-microservice-certificate-manager.git"
                    }
                }
                
            }
        }

        stage('Build and SonarQube'){
            steps{
                script{
                    withSonarQubeEnv(credentialsId: SONARCLOUD, installationName: 'Sonarcloud') {
                        try {
                            if (fileExists('pom.xml')) {
                                sh 'mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar'
                            }
                            else {
                                currentBuild.result = 'FAILURE'
                                error("File pom.xml not found.")
                            }
                        }
                        catch(Exception e){
                            currentBuild.result = 'FAILURE'
                            error("Error during Sonar analysis: ${e.message}")
                        }
                    }
                        
                }
            }
        }

        

    }
}